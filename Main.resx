<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQEAAAAAQAKAEAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAIAE
        AAAAAAAAAAAAAAAAAAAAAAAA0P//AKDX/wC/5/8Ar9//AF+gzwBgf68An4+fAHBvfwBALzAALxcgAF8/
        TwB/X28AcG+AAH+fzwAAAAAAUJ/QAAAPAABAID8AX2BvAJCPoACwx+AAUFdvADBvnwAgf78AABggAC8I
        AAAAHyAAICg/AEAQAAB/IAAAYBgAAE8XAABgP08AgCcAANA/AADvSAAA/1AAAOBIAADPPwAAAB8wADA/
        XwBwGB8A3zcAAP9nEAD/XwAAwDgAAEAPAABwl88AMDhQAD8/XwBfICAAYHivAC8vPwBPb5AAQGiQAC9A
        YAAvME8AMH+/AICfwABPf7AAMEBgAHBHTwCweH8A4J+AAHBATwDfsK8Af2BvAND3/wDAv88A0LCwAOD3
        /wDfqKAAz7fAAKCIkABwX2AAAP//ACAvQACAGAAA3///AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>